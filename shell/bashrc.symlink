#  ---------------------------------------------------------------------------
#
#  BASHRC for OSX
#  - Ben Hawker
#
#  Sections:
#  1.   Environment
#  2.   Terminal
#  3.   Utilities
#
#  ---------------------------------------------------------------------------

#   -------------------------------
#   1.  ENVIRONMENT
#   -------------------------------


#   Interactive Prompt
#   ------------------------------------------------------------
#   If not running interactively, don't do anything
[ -z "$PS1" ] && return
 

#   History
#   ------------------------------------------------------------
#   Don't put duplicate lines in the history

HISTCONTROL=ignoredups:ignorespace
 
#   Append to the history file, don't overwrite it

shopt -s histappend
 
#   For setting history length see HISTSIZE and HISTFILESIZE in bash(1)

HISTSIZE=1000
HISTFILESIZE=2000

#   Color Variables
#   ------------------------------------------------------------
#   Exported for Color Output

export  RST="\e[m"      # ANSI Reset

export  BLK="\e[0;30m"  # Black
export  RED="\e[0;31m"  # Red
export  GRN="\e[0;32m"  # Green
export  YEL="\e[0;33m"  # Yellow
export  BLU="\e[0;34m"  # Blue
export  VIO="\e[0;35m"  # Violet
export  CYN="\e[0;36m"  # Cyan
export  WHT="\e[0;37m"  # White

export BBLK="\e[1;30m"  # Bold Black
export BRED="\e[1;31m"  # Bold Red
export BGRN="\e[1;32m"  # Bold Green
export BYEL="\e[1;33m"  # Bold Yellow
export BBLU="\e[1;34m"  # Bold Blue
export BVIO="\e[1;35m"  # Bold Violet
export BCYN="\e[1;36m"  # Bold Cyan
export BWHT="\e[1;37m"  # Bold White

#   Window Size
#   ------------------------------------------------------------
#   Check the window size after each command and, if necessary,
#   update the values of LINES and COLUMNS.

shopt -s checkwinsize
 
#   Less
#   ------------------------------------------------------------
#   Make less more friendly for non-text input files, see lesspipe(1)

[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

#   Completion
#   ------------------------------------------------------------
#   Enable Bash Completion

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

#   Default Editor
#   ------------------------------------------------------------
#   Set nano as the default editor

VISUAL=nano; export VISUAL
EDITOR=nano; export EDITOR

#   -------------------------------
#   2.  TERMINAL
#   -------------------------------

#   Prompt
#   ------------------------------------------------------------
#   Change the Prompt Here

PROMPT_START="\n${BCYN}\u@\H${RST} ${WHT}\w${RST}"
PROMPT_END=" $ "

#   Source Git Prompt
#   ------------------------------------------------------------
#   Try to add the git pompt

source ~/.dotfiles/scripts/utilities/gitprompt.sh

#   Change Prompt
#   ------------------------------------------------------------
#   If this is an xterm set the title to a fancy title
case "$TERM" in
xterm*|rxvt*)
    # Set prompt all fancy
    PS1="$PROMPT_START$GIT_PS1$PROMPT_END"
    
    # Set second prompt bold cyan
    PS2="\e[1;36m>\e[m"
    ;;
*)
    ;;
esac

#   -------------------------------
#   3.  UTILITIES
#   -------------------------------

#   Aliases
#   ------------------------------------------------------------
#   Include Aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.tar.xz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }



